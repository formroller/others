import os
os.getcwd()
os.chdir('./medical')

import pandas as pd
import numpy as np

import re
import csv


# =============================================================================
# # Data Split
# =============================================================================

# df['location'], 시/도
# df['sub_loc'], 군/구
# df['loc_info], 지역에 따른 대략적 설명
# df['detail_info], 지역 상세 설명

# =>['loc_info'] + [info]
# =>['loc_detail] + [detail]

public = pd.read_csv('PublicData.csv', encoding='cp949')
public.columns = ['type','fname', 'provide', 'date','form']


public['fname'] = [i.replace('_',' ') for i in public['fname']]
public['splits']= [i.split(' ')[0] for i in public['fname']]
public['splits'].value_counts()

# 시/도 분리
p=re.compile(r'.+[시|도]')
public['first']= public['splits'].str.findall(p).astype('str')

public['first']= public['first'].str.replace('\'','')
public['first']= public['first'].str.replace('[','')
public['first'] = public['first'].str.replace(']','')
public['first'].value_counts()

# first 지역 외 제거


public['first'].replace('한국보건의료인국가시','',inplace=True)
public['first'].replace('보건의료인국가시','',inplace=True)
public['first'].replace('소독의무시','',inplace=True)
public['first'].replace('소독의무대상시','',inplace=True)
public['first'].replace('정도','',inplace=True)
public['first'].replace('2017년도','',inplace=True)
public['first'].replace('안마시','',inplace=True)
public['first'].replace('의료기기판매(임대)업(수시','',inplace=True)
public['first'].replace('사회복지시','',inplace=True)


# 시, 도 이름 통합
public.replace('서을시','서울특별시',inplace=True)
public.replace('부산시','부산광역시',inplace=True)
public.replace('인천시','인천광역시',inplace=True)
public.replace('세종특별자치시시','세종특별자치시',inplace=True)


# first -> location 컬럼명 변경
public.rename(columns = {'first':'location'}, inplace=True)

## step2) 시/군/구 추출

public['split_2'] = [i.split(' ')[1:] for i in public['fname']]

# 첫번째 split만 보관
a=[]
for i in public['split_2']:
    if i == []:
        a.append('')
    else:
        a.append(i[0])
        
print(a)

# 시/군/구 통합
b=[]
for i in range(len(a)):
    if a[i].endswith('시'):
        b.append(a[i])
    elif a[i].endswith('군'):
        b.append(a[i])
    elif a[i].endswith('구'):
        b.append(a[i])
    else:
        b.append('')
public['sub_loc'] = b


# 변수명 확인
public['sub_loc'].unique()

public.sub_loc.replace('현금급여비(장애구','',inplace=True)
public.sub_loc.replace('의료용구','',inplace=True)
public.sub_loc.replace('구군','',inplace=True)
public.sub_loc.replace('표본감시','',inplace=True)
public.sub_loc.replace('보조기구','',inplace=True)
public.sub_loc.replace('복지용구','',inplace=True)
public.sub_loc.replace('수시','',inplace=True)



## fname -> loc(info, detail)
# fname - loc 기관명 추출
second = [i.split(' ')[0] for i in public['fname']]

loc_part = public['fname'].loc[public['location'] == second]
a_2 = np.arange(0,2165)
loc_part2 = pd.Series(loc_part, index=a_2)
loc_part2.fillna('0',inplace=True)
public.head(30)


loc_detail =[]
for i in range(len(public)):
    if(len(loc_part2[i].split(' '))) <=2:
        loc_detail.append('')
    else:
        loc_detail.append(loc_part2[i].split(' ')[2:])
# public['loc_detail'] = loc_detail
            
## stpe3) 기관별로 분리
## fname  - part
# df['part'],기관명
# df['info'],기관 하위 항목
# df['detail'], 기관명 상세 설명
        


public['part'] = public['splits'].loc[public['location'] != second]
public['part'].value_counts()

# 기관명 있는 index만 선택해 split
part2 = public['fname'].loc[public['location'] != second]
a_1 = np.arange(0, 2165)
sub_part = pd.Series(part2, index = a_1)
sub_part.fillna('0', inplace = True)

info = []
for i in range(len(public)):
    if(len(sub_part[i].split(' '))) <=2:
        info.append('')
    else:
        info.append(sub_part[i].split(' ')[1])
    

public['info']=info


## public 하위 항목 설명
explain=[]
for i in range(len(public)):
    if len(public['fname'][i].split(' ')) <=2:
        explain.append('')
    else:
        explain.append(public['fname'][i].split(' ')[2:])

public['explain'] = explain


# splits, split_2 삭제
public.drop(['splits','split_2'], axis = 1, inplace = True)
public.head()


# to_csv
public.to_csv('public_12_21.csv', encoding='cp949')


